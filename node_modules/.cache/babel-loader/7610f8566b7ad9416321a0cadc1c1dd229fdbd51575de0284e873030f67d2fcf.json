{"ast":null,"code":"var _jsxFileName = \"/Users/mariami/Desktop/todoapp/todo/src/TodoItem.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n\n// import completed from './completed.png';\n\n// export default function ToDoListContainer() {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [todoList, setTodoList] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n\n//   useEffect(() => {\n//     const storedTodoList = localStorage.getItem(\"todoList\");\n//     if (storedTodoList) {\n//       setTodoList(JSON.parse(storedTodoList));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n//   }, [todoList]);\n\n//   const handleAddButtonClick = () => {\n//     if (inputValue.trim() !== \"\") {\n//       setTodoList([...todoList, { task: inputValue, completed: false }]);\n//       setInputValue(\"\");\n//     }\n//   };\n\n//   const handleDeleteBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList.splice(index, 1);\n//     setTodoList(updatedList);\n//   };\n\n//   const handleDoneBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList[index].completed = true;\n//     setTodoList(updatedList);\n//   };\n\n//   const filteredTodoList = todoList.filter((task) =>\n//     task.task.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"main\">\n//       <div className=\"container\">\n//         <h1 className=\"title\">To Do List</h1>\n//         <nav className=\"navigationBar\">\n//           <div className=\"searchDiv\">\n//             <input\n//               type=\"text\"\n//               className=\"searchInput\"\n//               placeholder=\"Search...\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button className=\"searchBtn\"></button>\n//           </div>\n//         </nav>\n//       </div>\n//       <div className=\"inputDiv\">\n//         <input\n//           className=\"inputField\"\n//           type=\"text\"\n//           name=\"inputField\"\n//           placeholder=\"Dream, Plan, Do!\"\n//           required\n//           value={inputValue}\n//           onChange={(e) => setInputValue(e.target.value)}\n//         />\n//         <button className=\"submitBtn\" onClick={handleAddButtonClick}>\n//           Add\n//         </button>\n//       </div>\n//       <div className=\"sec-main\">\n//         {filteredTodoList.map((task, index) => (\n//           <div className=\"todoitem\" key={index}>\n//             {task.completed && (\n//               <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n//             )}\n//             <p className=\"todo-text\">{task.task}</p>\n//             <div className=\"btnDiv\">\n//               {!task.completed && (\n//                 <button className=\"doneBtn\" onClick={() => handleDoneBtnClick(index)}>\n//                   <i className=\"fas fa-check white\"></i>\n//                   <span className=\"sr-only\">Done</span>\n//                 </button>\n//               )}\n//               <button\n//                 onClick={() => handleDeleteBtnClick(index)}\n//                 className=\"deleteBtn\"\n//               >\n//                 <i className=\"fas fa-minus white-icon\"></i>\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import editedIcon from './icon.png'\n// import icon2 from './icon2.png'\n// import icon3 from './icon3.png'\n\n// import completed from './icon4.png';\n\n// export default function ToDoListContainer() {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [todoList, setTodoList] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [isEditing , setIsEditing] = useState([]);\n\n//   useEffect(() => {\n//     const storedTodoList = localStorage.getItem(\"todoList\");\n//     if (storedTodoList) {\n//       setTodoList(JSON.parse(storedTodoList));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n//   }, [todoList]);\n\n//   const handleAddButtonClick = () => {\n//     if (inputValue.trim() !== \"\") {\n//       setTodoList([...todoList, { task: inputValue, completed: false }]);\n//       setInputValue(\"\");\n//       setIsEditing([...isEditing, false]);\n//     }\n//   };\n\n//   const handleDeleteBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList.splice(index, 1);\n//     setTodoList(updatedList);\n//     // aq vnaxav damWirdeba Tu ara\n//   };\n\n//   const handleDoneBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList[index].completed = true;\n//     setTodoList(updatedList);\n//   };\n\n//   const filteredTodoList = todoList.filter((task) =>\n//     task.task.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n//   const handleEditInputChange = (event, index) => {\n//     const updatedList = [...todoList];\n//     updatedList[index].task = event.target.value;\n//     setTodoList(updatedList);\n//   };\n//   const handleEditBtnClick = (index) => {\n//     const updatedEditing = [...isEditing];\n//     updatedEditing[index] = true;\n//     setIsEditing(updatedEditing);\n//   };\n\n//   return (\n//     <div className=\"main\">\n//       <div className=\"container\">\n//         <h1 className=\"title\">To Do List</h1>\n//         <nav className=\"navigationBar\">\n//           <div className=\"searchDiv\">\n//             <input\n//               type=\"text\"\n//               className=\"searchInput\"\n//               placeholder=\"Search...\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button className=\"searchBtn\"></button>\n//           </div>\n//         </nav>\n//       </div>\n//       <div className=\"inputDiv\">\n//         <input\n//           className=\"inputField\"\n//           type=\"text\"\n//           name=\"inputField\"\n//           placeholder=\"Dream, Plan, Do!\"\n//           required\n//           value={inputValue}\n//           onChange={(e) => setInputValue(e.target.value)}\n//         />\n//         <button className=\"submitBtn\" onClick={handleAddButtonClick}>\n//           Add\n//         </button>\n//       </div>\n//       <div className=\"sec-main\">\n//         {filteredTodoList.map((task, index) => (\n//           <div className=\"todoitem\" key={index}>\n//              {!isEditing[index] &&(\n//             <img onClick={() => handleEditBtnClick(index)} title='edit' className=\"editedicon\" src={editedIcon} alt=\"icon\" />)}\n//             {task.completed && (\n//               <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n//             )}\n//             {!isEditing[index] ? (\n//             <input\n//             onChange={(event) => handleEditInputChange(event, index)}\n//              className=\"editinput\"\n//              type=\"text\"\n//             value={task.task}\n//                    />\n//              ) : (\n//               <p className=\"todo-text\">{task.task}</p>\n//               )}\n\n//             <div className=\"btnDiv\">\n//               {!task.completed && (\n//                 <img title='completed' src={icon2} onClick={() => handleDoneBtnClick(index)} />\n//               )}\n//             <img src={icon3 } alt=\"icon\"  title='Delete'   onClick={() => handleDeleteBtnClick(index)}\n//                 className=\"deleteBtn\" />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport editedIcon from './icon.png';\nimport icon2 from './icon2.png';\nimport icon3 from './icon3.png';\nimport completed from './icon4.png';\nimport doneEditing from './icon5.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoListContainer() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    const storedTodoList = localStorage.getItem(\"todoList\");\n    if (storedTodoList) {\n      setTodoList(JSON.parse(storedTodoList));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n  const handleAddButtonClick = () => {\n    if (inputValue.trim() !== \"\") {\n      setTodoList([...todoList, {\n        task: inputValue,\n        completed: false,\n        editing: false\n      }]);\n      setInputValue(\"\");\n    }\n  };\n  const handleDeleteBtnClick = index => {\n    const updatedList = [...todoList];\n    updatedList.splice(index, 1);\n    setTodoList(updatedList);\n  };\n  const handleDoneBtnClick = index => {\n    const updatedList = [...todoList];\n    updatedList[index].completed = true;\n    setTodoList(updatedList);\n  };\n  const handleEditInputChange = (event, index) => {\n    const updatedList = [...todoList];\n    updatedList[index].task = event.target.value;\n    setTodoList(updatedList);\n  };\n  const handleEditBtnClick = index => {\n    const updatedList = [...todoList];\n    updatedList[index].editing = true;\n    setTodoList(updatedList);\n  };\n  const handleEditDoneClick = index => {\n    const updatedList = [...todoList];\n    updatedList[index].editing = false;\n    setTodoList(updatedList);\n  };\n  const filteredTodoList = todoList.filter(task => task.task.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navigationBar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"searchInput\",\n            placeholder: \"Search...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputField\",\n        type: \"text\",\n        name: \"inputField\",\n        placeholder: \"Dream, Plan, Do!\",\n        required: true,\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitBtn\",\n        onClick: handleAddButtonClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sec-main\",\n      children: filteredTodoList.map((task, index) =>\n      /*#__PURE__*/\n      //           <div className=\"todoitem\" key={index}>\n      //             {!task.editing && !task.completed && (\n      //               <img\n      //                 onClick={() => handleEditBtnClick(index)}\n      //                 title=\"edit\"\n      //                 className=\"editedicon\"\n      //                 src={editedIcon}\n      //                 alt=\"icon\"\n      //               />\n      //             )}\n      //                  {task.completed && (\n      //           <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n      //         )}\n      //         {!task.editing ? (\n      //           <p className=\"todo-text\">{task.task}</p>\n      //         ) : (\n      //           <input\n      //             className=\"editinput\"\n      //             type=\"text\"\n      //             value={task.task}\n      //             onChange={(event) => handleEditInputChange(event, index)}\n      //           />\n      //         )}\n      //         <div className=\"btnDiv\">\n      //         {!task.editing && !task.completed && (\n      //         <img\n      //           title=\"completed\"\n      //           src={icon2}\n      //           alt=\"icon\"\n      //           onClick={() => handleDoneBtnClick(index)}\n      //          />\n      //          )}\n      //          {!task.editing && (\n      //           <img\n      //             src={icon3}\n      //             alt=\"icon\"\n      //             title=\"Delete\"\n      //             onClick={() => handleDeleteBtnClick(index)}\n      //             className=\"deleteBtn\"\n      //           />\n      //          )}\n      //          {task.editing && (\n      //             <img\n      //             src={doneEditing}\n      //             alt=\"icon\"\n      //             title=\"Done editing\"\n      //             className=\"doneEditBtn\"\n      //             onClick={() => handleEditDoneClick(index)}\n      //               />\n      //          )}\n      //         </div>\n      //       </div>\n      //     ))}\n      //   </div>\n      // </div>\n      //    );\n      //  }\n      _jsxDEV(\"div\", {\n        className: \"todoitem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-content\",\n          children: [!task.editing && !task.completed && /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => handleEditBtnClick(index),\n            title: \"edit\",\n            className: \"editedicon\",\n            src: editedIcon,\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 5\n          }, this), task.completed && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"completedIcon\",\n            src: completed,\n            alt: \"completed icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 7\n          }, this), !task.editing ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"todo-text\",\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 7\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"editinput\",\n            type: \"text\",\n            value: task.task,\n            onChange: event => handleEditInputChange(event, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btnDiv\",\n          children: [!task.editing && !task.completed && /*#__PURE__*/_jsxDEV(\"img\", {\n            title: \"completed\",\n            src: icon2,\n            onClick: () => handleDoneBtnClick(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 7\n          }, this), !task.editing && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon3,\n            alt: \"icon\",\n            title: \"Delete\",\n            onClick: () => handleDeleteBtnClick(index),\n            className: \"deleteBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 7\n          }, this), task.editing && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: doneEditing,\n            alt: \"icon\",\n            title: \"Done editing\",\n            className: \"doneEditBtn\",\n            onClick: () => handleEditDoneClick(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 3\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoListContainer, \"mexvQNQfcNF5+P5rPUtcGzgLBGY=\");\n_c = ToDoListContainer;\nvar _c;\n$RefreshReg$(_c, \"ToDoListContainer\");","map":{"version":3,"names":["React","useState","useEffect","editedIcon","icon2","icon3","completed","doneEditing","jsxDEV","_jsxDEV","ToDoListContainer","_s","inputValue","setInputValue","todoList","setTodoList","searchQuery","setSearchQuery","storedTodoList","localStorage","getItem","JSON","parse","setItem","stringify","handleAddButtonClick","trim","task","editing","handleDeleteBtnClick","index","updatedList","splice","handleDoneBtnClick","handleEditInputChange","event","target","value","handleEditBtnClick","handleEditDoneClick","filteredTodoList","filter","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","name","required","onClick","map","title","src","alt","_c","$RefreshReg$"],"sources":["/Users/mariami/Desktop/todoapp/todo/src/TodoItem.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n\n// import completed from './completed.png';\n\n// export default function ToDoListContainer() {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [todoList, setTodoList] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n\n//   useEffect(() => {\n//     const storedTodoList = localStorage.getItem(\"todoList\");\n//     if (storedTodoList) {\n//       setTodoList(JSON.parse(storedTodoList));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n//   }, [todoList]);\n\n//   const handleAddButtonClick = () => {\n//     if (inputValue.trim() !== \"\") {\n//       setTodoList([...todoList, { task: inputValue, completed: false }]);\n//       setInputValue(\"\");\n//     }\n//   };\n\n//   const handleDeleteBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList.splice(index, 1);\n//     setTodoList(updatedList);\n//   };\n\n//   const handleDoneBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList[index].completed = true;\n//     setTodoList(updatedList);\n//   };\n\n//   const filteredTodoList = todoList.filter((task) =>\n//     task.task.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"main\">\n//       <div className=\"container\">\n//         <h1 className=\"title\">To Do List</h1>\n//         <nav className=\"navigationBar\">\n//           <div className=\"searchDiv\">\n//             <input\n//               type=\"text\"\n//               className=\"searchInput\"\n//               placeholder=\"Search...\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button className=\"searchBtn\"></button>\n//           </div>\n//         </nav>\n//       </div>\n//       <div className=\"inputDiv\">\n//         <input\n//           className=\"inputField\"\n//           type=\"text\"\n//           name=\"inputField\"\n//           placeholder=\"Dream, Plan, Do!\"\n//           required\n//           value={inputValue}\n//           onChange={(e) => setInputValue(e.target.value)}\n//         />\n//         <button className=\"submitBtn\" onClick={handleAddButtonClick}>\n//           Add\n//         </button>\n//       </div>\n//       <div className=\"sec-main\">\n//         {filteredTodoList.map((task, index) => (\n//           <div className=\"todoitem\" key={index}>\n//             {task.completed && (\n//               <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n//             )}\n//             <p className=\"todo-text\">{task.task}</p>\n//             <div className=\"btnDiv\">\n//               {!task.completed && (\n//                 <button className=\"doneBtn\" onClick={() => handleDoneBtnClick(index)}>\n//                   <i className=\"fas fa-check white\"></i>\n//                   <span className=\"sr-only\">Done</span>\n//                 </button>\n//               )}\n//               <button\n//                 onClick={() => handleDeleteBtnClick(index)}\n//                 className=\"deleteBtn\"\n//               >\n//                 <i className=\"fas fa-minus white-icon\"></i>\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import editedIcon from './icon.png'\n// import icon2 from './icon2.png'\n// import icon3 from './icon3.png'\n\n// import completed from './icon4.png';\n\n// export default function ToDoListContainer() {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [todoList, setTodoList] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [isEditing , setIsEditing] = useState([]);\n\n\n  \n\n\n//   useEffect(() => {\n//     const storedTodoList = localStorage.getItem(\"todoList\");\n//     if (storedTodoList) {\n//       setTodoList(JSON.parse(storedTodoList));\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n//   }, [todoList]);\n\n//   const handleAddButtonClick = () => {\n//     if (inputValue.trim() !== \"\") {\n//       setTodoList([...todoList, { task: inputValue, completed: false }]);\n//       setInputValue(\"\");\n//       setIsEditing([...isEditing, false]);\n//     }\n//   };\n\n//   const handleDeleteBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList.splice(index, 1);\n//     setTodoList(updatedList);\n//     // aq vnaxav damWirdeba Tu ara\n//   };\n\n//   const handleDoneBtnClick = (index) => {\n//     const updatedList = [...todoList];\n//     updatedList[index].completed = true;\n//     setTodoList(updatedList);\n//   };\n  \n\n//   const filteredTodoList = todoList.filter((task) =>\n//     task.task.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n//   const handleEditInputChange = (event, index) => {\n//     const updatedList = [...todoList];\n//     updatedList[index].task = event.target.value;\n//     setTodoList(updatedList);\n//   };\n//   const handleEditBtnClick = (index) => {\n//     const updatedEditing = [...isEditing];\n//     updatedEditing[index] = true;\n//     setIsEditing(updatedEditing);\n//   };\n  \n//   return (\n//     <div className=\"main\">\n//       <div className=\"container\">\n//         <h1 className=\"title\">To Do List</h1>\n//         <nav className=\"navigationBar\">\n//           <div className=\"searchDiv\">\n//             <input\n//               type=\"text\"\n//               className=\"searchInput\"\n//               placeholder=\"Search...\"\n//               value={searchQuery}\n//               onChange={(e) => setSearchQuery(e.target.value)}\n//             />\n//             <button className=\"searchBtn\"></button>\n//           </div>\n//         </nav>\n//       </div>\n//       <div className=\"inputDiv\">\n//         <input\n//           className=\"inputField\"\n//           type=\"text\"\n//           name=\"inputField\"\n//           placeholder=\"Dream, Plan, Do!\"\n//           required\n//           value={inputValue}\n//           onChange={(e) => setInputValue(e.target.value)}\n//         />\n//         <button className=\"submitBtn\" onClick={handleAddButtonClick}>\n//           Add\n//         </button>\n//       </div>\n//       <div className=\"sec-main\">\n//         {filteredTodoList.map((task, index) => (\n//           <div className=\"todoitem\" key={index}>\n//              {!isEditing[index] &&(\n//             <img onClick={() => handleEditBtnClick(index)} title='edit' className=\"editedicon\" src={editedIcon} alt=\"icon\" />)}\n//             {task.completed && (\n//               <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n//             )}\n//             {!isEditing[index] ? (\n//             <input\n//             onChange={(event) => handleEditInputChange(event, index)}\n//              className=\"editinput\"\n//              type=\"text\"\n//             value={task.task}\n//                    />\n//              ) : (\n//               <p className=\"todo-text\">{task.task}</p>\n//               )}\n\n//             <div className=\"btnDiv\">\n//               {!task.completed && (\n//                 <img title='completed' src={icon2} onClick={() => handleDoneBtnClick(index)} />\n//               )}\n//             <img src={icon3 } alt=\"icon\"  title='Delete'   onClick={() => handleDeleteBtnClick(index)}\n//                 className=\"deleteBtn\" />\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport editedIcon from './icon.png';\nimport icon2 from './icon2.png';\nimport icon3 from './icon3.png';\nimport completed from './icon4.png';\nimport doneEditing from './icon5.png'\n\nexport default function ToDoListContainer() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    const storedTodoList = localStorage.getItem(\"todoList\");\n    if (storedTodoList) {\n      setTodoList(JSON.parse(storedTodoList));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n  }, [todoList]);\n\n  const handleAddButtonClick = () => {\n    if (inputValue.trim() !== \"\") {\n      setTodoList([...todoList, { task: inputValue, completed: false, editing: false }]);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleDeleteBtnClick = (index) => {\n    const updatedList = [...todoList];\n    updatedList.splice(index, 1);\n    setTodoList(updatedList);\n  };\n\n  const handleDoneBtnClick = (index) => {\n    const updatedList = [...todoList];\n    updatedList[index].completed = true;\n    setTodoList(updatedList);\n  };\n\n  const handleEditInputChange = (event, index) => {\n    const updatedList = [...todoList];\n    updatedList[index].task = event.target.value;\n    setTodoList(updatedList);\n  };\n\n\n  const handleEditBtnClick = (index) => {\n    const updatedList = [...todoList];\n    updatedList[index].editing = true;\n    setTodoList(updatedList);\n  };\n  \n  const handleEditDoneClick = (index) => {\n    const updatedList = [...todoList];\n    updatedList[index].editing = false;\n    setTodoList(updatedList);\n  };\n  \n  const filteredTodoList = todoList.filter((task) =>\n    task.task.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <h1 className=\"title\">To Do List</h1>\n        <nav className=\"navigationBar\">\n          <div className=\"searchDiv\">\n            <input\n              type=\"text\"\n              className=\"searchInput\"\n              placeholder=\"Search...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n            <button className=\"searchBtn\"></button>\n          </div>\n        </nav>\n      </div>\n      <div className=\"inputDiv\">\n        <input\n          className=\"inputField\"\n          type=\"text\"\n          name=\"inputField\"\n          placeholder=\"Dream, Plan, Do!\"\n          required\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button className=\"submitBtn\" onClick={handleAddButtonClick}>\n          Add\n        </button>\n      </div>\n      <div className=\"sec-main\">\n        {filteredTodoList.map((task, index) => (\n//           <div className=\"todoitem\" key={index}>\n//             {!task.editing && !task.completed && (\n//               <img\n//                 onClick={() => handleEditBtnClick(index)}\n//                 title=\"edit\"\n//                 className=\"editedicon\"\n//                 src={editedIcon}\n//                 alt=\"icon\"\n//               />\n//             )}\n//                  {task.completed && (\n//           <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n//         )}\n//         {!task.editing ? (\n//           <p className=\"todo-text\">{task.task}</p>\n//         ) : (\n//           <input\n//             className=\"editinput\"\n//             type=\"text\"\n//             value={task.task}\n//             onChange={(event) => handleEditInputChange(event, index)}\n//           />\n//         )}\n\n//         <div className=\"btnDiv\">\n//         {!task.editing && !task.completed && (\n//         <img\n//           title=\"completed\"\n//           src={icon2}\n//           alt=\"icon\"\n//           onClick={() => handleDoneBtnClick(index)}\n//          />\n//          )}\n//          {!task.editing && (\n//           <img\n//             src={icon3}\n//             alt=\"icon\"\n//             title=\"Delete\"\n//             onClick={() => handleDeleteBtnClick(index)}\n//             className=\"deleteBtn\"\n//           />\n//          )}\n//          {task.editing && (\n//             <img\n//             src={doneEditing}\n//             alt=\"icon\"\n//             title=\"Done editing\"\n//             className=\"doneEditBtn\"\n//             onClick={() => handleEditDoneClick(index)}\n//               />\n//          )}\n//         </div>\n//       </div>\n//     ))}\n//   </div>\n// </div>\n//    );\n//  }\n<div className=\"todoitem\" key={index}>\n\n  <div className=\"todo-content\">\n  {!task.editing && !task.completed && (\n    <img\n      onClick={() => handleEditBtnClick(index)}\n      title=\"edit\"\n      className=\"editedicon\"\n      src={editedIcon}\n      alt=\"icon\"\n    />\n  )}\n    {task.completed && (\n      <img className=\"completedIcon\" src={completed} alt=\"completed icon\" />\n    )}\n    {!task.editing ? (\n      <p className=\"todo-text\">{task.task}</p>\n    ) : (\n      <input\n        className=\"editinput\"\n        type=\"text\"\n        value={task.task}\n        onChange={(event) => handleEditInputChange(event, index)}\n      />\n    )}\n  </div>\n  <div className=\"btnDiv\">\n    {!task.editing && !task.completed && (\n      <img\n        title=\"completed\"\n        src={icon2}\n        onClick={() => handleDoneBtnClick(index)}\n      />\n    )}\n    {!task.editing && (\n      <img\n        src={icon3}\n        alt=\"icon\"\n        title=\"Delete\"\n        onClick={() => handleDeleteBtnClick(index)}\n        className=\"deleteBtn\"\n      />\n    )}\n    {task.editing && (\n      <img\n        src={doneEditing}\n        alt=\"icon\"\n        title=\"Done editing\"\n        className=\"doneEditBtn\"\n        onClick={() => handleEditDoneClick(index)}\n      />\n    )}\n  </div>\n</div>\n    ))}\n  </div>\n</div>\n   );\n }"],"mappings":";;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,aAAa;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}